<?php

class UsersControllers extends \BaseController {

	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		 $todo = Todo::all();
        
        return View::make('users.index', compact('task'));

		//return View::make('users.index');
	}


	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		return View::make('users.create');
	}


	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		// Capture Form Data
		$payload    = Input::except('_token');
		// Validate data and return errors if any
		$validation = Validator::make($payload, User::$rules);


		if ($validation->fails()) 
		{
			return Redirect::to('users/create')
					->withErrors($validation) // send back all errors to the login form
					->withInput(Input::except('password'));
		}
		else
	    {
			// Redirect the user back to the form and show them the errors made
		    
		    $user = new User;
		    $user->username = Input::get('username');
			$user->password = Hash::make(Input::get('password'));
			
			if($user->save()) return Redirect::to('todo');
		}
	}

    

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		return View::make('users.show');
			$user = new User;
			$user->username = "ab";
			$user->password = Hash::password('pass');
			$user->save();
	}
     
     

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		//
	}


	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		return View::make('users.update');
	}

	 public function login()
	{
        return View::make('users.login');
	}

     public function signin()
     {
     	// Capture form input
     	$username = Input::get('username');
     	$password = Input::get('password');

     	$rules = [
     		'username' => 'required|exists:users,username',
     		'password' => 'required'
     	];

     	$validation = Validator::make(Input::only(['username','password']), $rules);

     	if($validation->passes())
     	{
			if (Auth::attempt(array('username' => $username, 'password' => $password)))
			{
				return Redirect::to('todo');
			}

			return Redirect::back()->with('message', 'Check username and password');
     	}

     	return Redirect::back()->withErrors($validation)->withInput();
     }
      public function logout()
      {
      	Auth::logout();
      	return Redirect::route('users.login');
      }
	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		//
	}


}
